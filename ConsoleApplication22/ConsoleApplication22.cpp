// ConsoleApplication22.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <unordered_set>
#include <string>
#include <Windows.h>
using namespace std;

class ОсобливіСимволи {
private:
    static const std::unordered_set<char> особливі_символи;

public:
    char символ;

    ОсобливіСимволи(char c) : символ(c) {}

    bool operator==(const ОсобливіСимволи& other) const {
       
        return (символ == other.символ) ||
            (особливі_символи.count(символ) && особливі_символи.count(other.символ));
    }

    bool operator!=(const ОсобливіСимволи& other) const {
        return !(*this == other);
    }
};

const unordered_set<char> ОсобливіСимволи::особливі_символи = {
    'O', 'A', 'I', 'E', 'H', 'C', 'B', 'K', 'P', 'X', 'T', 'M'
};

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    char c1, c2;
    cout << "Введіть перший символ: ";
    cin >> c1;
    cout << "Введіть другий символ: ";
    cin >> c2;

    ОсобливіСимволи символ1(c1);
    ОсобливіСимволи символ2(c2);


    if (символ1 == символ2) {
        cout << "Символи рівні." << endl;
    }
    else {
        cout << "Символи не рівні." << endl;
    }

    return 0;
}


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
